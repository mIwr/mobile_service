
pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }
    settings.ext.flutterSdkPath = flutterSdkPath()

    includeBuild("${settings.ext.flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        maven { url 'https://developer.huawei.com/repo/' }
        gradlePluginPortal()
    }
    plugins {}
    //DSL resolution fix for id 'com.huawei.agconnect:agcp'
    resolutionStrategy {
        eachPlugin {
            if (it.requested.id.getNamespace() == 'com.huawei.agconnect') {
                println ">> ${it.requested.id.id}"
                if (it.requested.id.id == 'com.huawei.agconnect.agcp') {
                    it.useModule('com.huawei.agconnect:agcp:1.9.1.302')
                }
                if (it.requested.id.id == 'com.huawei.agconnect.apms') {
                    it.useModule('com.huawei.agconnect:agconnect-apms-plugin:1.9.1.302')
                }
                println ">> ${it.target}"
            } else {
                println ">  ${it.target}"
            }
        }
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version '8.4.0' apply false
    id "org.jetbrains.kotlin.android" version "1.9.23" apply false
    id "com.huawei.agconnect.agcp" version "1.9.1.302" apply false
    id "com.google.gms.google-services" version "4.4.2" apply false
    id "com.google.firebase.crashlytics" version "3.0.2" apply false
}

include ":app"