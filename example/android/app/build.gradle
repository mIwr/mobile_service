plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.huawei.agconnect" apply false
    id "com.google.gms.google-services" apply false
    id "com.google.firebase.crashlytics" apply false
}

def flavorName = getGradle().getStartParameter().getTaskRequests().toString().toLowerCase();
if (flavorName.contains("hms")) {
    apply plugin: 'com.huawei.agconnect'
}
if (flavorName.contains("gms")) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    // Conditional for compatibility with AGP <4.2.
    if (project.android.hasProperty("namespace")) {
        namespace "org.zeit.message.service.example"
    }
    compileSdk 35
    ndkVersion flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        // Fixes duplicate libraries build issue,
        // when your project uses more than one plugin that depend on C++ libs.
        pickFirst 'lib/**/libc++_shared.so'
    }

    defaultConfig {
        applicationId "org.zeit.message.service.example"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    flavorDimensions = ["environmentTypes"]
    productFlavors {
        exampleGms {
            // bundle with GMS
            dimension "environmentTypes"
        }
        exampleHms {
            // bundle with HMS
            dimension "environmentTypes"
        }
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['dbgKeyAlias']
            keyPassword keystoreProperties['dbgKeyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['distrKeyAlias']
            keyPassword keystoreProperties['distrKeyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            //enableV3Signing true
            //enableV4Signing true
            minifyEnabled true
            shrinkResources false // Push action icons and launcher foreground saver. True - Push messages will break
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
        if (flavorName.contains("hms")) {
            /*implementation 'com.huawei.agconnect:agconnect-core:1.9.1.302'
            implementation 'com.huawei.hms:hianalytics:6.8.0.300'
            implementation 'com.huawei.agconnect:agconnect-crash:1.7.3.302'
            implementation "com.huawei.hms:push:6.10.0.300"*/
        }
        if (flavorName.contains("gms")) {
            //Don't comment. Without it uploading dsym during release build fails
            implementation 'com.google.firebase:firebase-crashlytics:19.0.2'
        }
    }
}

flutter {
    source '../..'
}
